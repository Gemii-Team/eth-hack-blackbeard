from langchain_core.messages import HumanMessage
from langchain_openai import ChatOpenAI
from langgraph.checkpoint.memory import MemorySaver
from langgraph.prebuilt import create_react_agent
from dotenv import load_dotenv
import os
from src.price_fetching import get_crypto_price  # ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ñ‡∏£‡∏¥‡∏õ‡πÇ‡∏ï

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å .env
load_dotenv()
llm = ChatOpenAI(model="gpt-4o-mini", api_key=os.getenv("OPENAI_API_KEY"))

# ‡πÉ‡∏ä‡πâ Memory Saver ‡∏à‡∏≥‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏Ç‡∏≠‡∏á User
memory = MemorySaver()

# ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á BTC ‡∏´‡∏£‡∏∑‡∏≠ ETH
btc_price = get_crypto_price("BTCUSDT")
eth_price = get_crypto_price("ETHUSDT")

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô state_modifier ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö AI
def modify_state(state):
    return f"You are a crypto advisor. Give strategic advice based on current trends.\n- BTC Price: {btc_price}\n- ETH Price: {eth_price}"

# ‡πÉ‡∏ä‡πâ ReAct Agent ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ AI ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö
agent_executor = create_react_agent(
    llm,
    tools=[],  # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ Tools ‡πÄ‡∏ä‡πà‡∏ô‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£‡∏´‡∏£‡∏∑‡∏≠ indicator ‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
    checkpointer=None,
    state_modifier=modify_state,  # ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏ó‡∏ô string
)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏±‡∏ö input ‡∏à‡∏≤‡∏Å user
def chat_crypto_advisor():
    print("üîπ Crypto Advisor Chatbot (‡∏û‡∏¥‡∏°‡∏û‡πå 'exit' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å)")
    while True:
        user_input = input("\nUser: ")
        if user_input.lower() == "exit":
            break

        response = agent_executor.invoke(
            {"messages": [HumanMessage(content=user_input)], "thread_id": "user_session"}
        )

        if "messages" in response and len(response["messages"]) > 0:
            print("\nAdvisor:", response["messages"][-1].content)  # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏à‡∏≤‡∏Å AI
        else:
            print("\nAdvisor: Sorry, I couldn't generate a response.")

chat_crypto_advisor()
